<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd       http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd       http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd       http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
    <!-- Flujos de manejo de errores iniciales -->
    <flow name="salesforce-system-api-main">
        <http:listener config-ref="salesforce-system-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="salesforce-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="400 - BAD REQUEST">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 400,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="404 - NOT FOUND">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 404,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="405 - METHOD NOT ALLOWED">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="406 - NOT ACCEPTABLE">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 406,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[406]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="415 - UNSUPPORTED MEDIA TYPE">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 415,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="501 - NOT IMPLEMENTED">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 501,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[501]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="salesforce-system-api-console">
        <http:listener config-ref="salesforce-system-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="salesforce-system-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="404 - NOT FOUND">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "code": 404,
    "message": error.description default null,
    "x-correlation-id": correlationId,
    "timestamp": ((now() >> "UTC") as DateTime as String {format: "yyyy-MM-dd'T'HH:mm:ss'Z'"}),
    "details": error.detailedDescription default null
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <!-- 1) POST /accounts -->
    <flow name="post:\accounts:application\json:salesforce-system-api-config">
        <!-- Log del request -->
        <logger level="INFO" doc:name="Log request" message="POST /accounts payload: #[payload]" />
        <!-- Guardar el externalId en variable -->
        <set-variable variableName="externalId" value="#[payload.externalId default payload.id]" />
        <set-variable value="#[payload]" doc:name="Set Variable" doc:id="109280e8-57b7-486f-9056-ddf14a009294" variableName="originalPayload" />
        <!-- Mapear payload hacia Salesforce -->
        <ee:transform doc:name="Map to SF payload">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
  Name: (payload.firstName default "") ++ " " ++ (payload.lastName default ""),
  Phone: payload.phone default null,
  BillingCity: payload.address.city default null,
  BillingState: payload.address.state default null,
  BillingCountry: payload.address.country default null,
  External_Id__c: (payload.externalId default payload.id) as String
}]]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Log mapped SF payload" message="#[payload]" />
        <!-- Upsert en Salesforce -->
        <salesforce:upsert config-ref="Salesforce_Config" objectType="Account" externalIdFieldName="${salesforce.externalIdField}" doc:name="SF Upsert Account" />
        <!-- Transformar el resultado del Upsert -->
        <ee:transform doc:name="Transform Upsert Response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Log Upsert Result" message="Upsert response: #[payload]" />
        <!-- Log del externalId -->
        <logger level="INFO" message="Valor de externalId: #[vars.externalId]" />
        <logger level="INFO" message="Valor de vars: #[vars.originalPayload]" />
        <!-- Query usando parÃ¡metros -->
        <salesforce:query config-ref="Salesforce_Config" doc:name="Query SF by external id">
            <salesforce:salesforce-query><![CDATA[SELECT Id, Name, External_Id__c, Phone, BillingCity, BillingState, BillingCountry, CreatedDate, LastModifiedDate
            FROM Account
            WHERE External_Id__c = :externalId
            LIMIT 1]]></salesforce:salesforce-query>
            <salesforce:parameters>#[{ externalId: "'" ++ vars.externalId ++ "'" }]</salesforce:parameters>
        </salesforce:query>
        <!-- Transformar la respuesta a JSON -->
        <ee:transform doc:name="SF -&gt; Normalized JSON Response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
var r = payload.items[0].successful default null
---
if (r == false) 
  { message: "operacion fallo" }
else
  {
    externalId: vars.externalId,
    firstName: vars.originalPayload.firstName,
    lastName: vars.originalPayload.lastName,
    email: vars.originalPayload.email,
    phone: vars.originalPayload.phone,
    birthDate: vars.originalPayload.birthDate,
    city: vars.originalPayload.city,
    state: vars.originalPayload.state,
    country: vars.originalPayload.country
  }]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <!-- 2) PUT /accounts/{id} -->
    <flow name="put:\accounts\(id):application\json:salesforce-system-api-config">
        <logger level="INFO" doc:name="Log request" message="PUT /accounts/#{attributes.uriParams.id} payload: #[payload]" />
        <salesforce:query config-ref="Salesforce_Config" doc:name="Query Existing Account">
            <salesforce:salesforce-query><![CDATA[SELECT Id, Name, external_id__c, Phone, BillingCity, BillingState, BillingCountry
FROM Account
WHERE external_id__c = '#[attributes.uriParams.id]'
   OR Id = '#[attributes.uriParams.id]']]></salesforce:salesforce-query>
        </salesforce:query>
        <choice doc:name="Exists?">
            <when expression="#[sizeOf(payload.records default []) &gt; 0]">
                <ee:transform doc:name="Map update payload">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
  Id             : payload.records[0].Id default payload[0].Id,
  Name           : (payload.firstName default "") ++ " " ++ (payload.lastName default ""),
  Phone          : payload.phone default null,
  BillingCity    : payload.address.city default null,
  BillingState   : payload.address.state default null,
  BillingCountry : payload.address.country default null,
  External_Id__c : (payload.externalId default payload.id) as String
}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
                <salesforce:update config-ref="Salesforce_Config" type="Account" doc:name="SF Update Account">
                    <salesforce:records><![CDATA[#[payload]]]></salesforce:records>
                </salesforce:update>
                <salesforce:query config-ref="Salesforce_Config" doc:name="Query SF After Update">
                    <salesforce:salesforce-query><![CDATA[SELECT Id, Name, external_id__c, Phone, BillingCity, BillingState, BillingCountry, CreatedDate, LastModifiedDate
FROM Account
WHERE Id = '#[payload.Id]'
LIMIT 1]]></salesforce:salesforce-query>
                </salesforce:query>
            </when>
            <otherwise>
                <set-payload value="{&quot;error&quot;:&quot;Account not found with id: &quot; ++ attributes.uriParams.id}" />
            </otherwise>
        </choice>
    </flow>
    <!-- 3) GET /accounts -->
    <flow name="get:\accounts:salesforce-system-api-config">
        <set-variable variableName="limit" value="#[(attributes.queryParams.limit default '50') as Number]" doc:name="Set limit" />
        <set-variable value="#['SELECT Id, Name, external_id__c, Phone, BillingCity, BillingState, BillingCountry, CreatedDate, LastModifiedDate FROM Account LIMIT ' ++ vars.limit]" doc:name="Build SOQL Query" doc:id="992a2818-4612-41ff-8c71-cee42ed94e4d" variableName="query" />
        <salesforce:query config-ref="Salesforce_Config" doc:name="Query Accounts">
            <salesforce:salesforce-query><![CDATA[#[vars.query]]]></salesforce:salesforce-query>
        </salesforce:query>
        <ee:transform doc:name="Transform to JSON" doc:id="90e82ae7-78f7-492c-98af-1ba63498ec5d">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (acc) -> {
    id: acc.Id,
    name: acc.Name,
    externalId: acc.external_id__c,
    phone: acc.Phone,
    billingCity: acc.BillingCity,
    billingState: acc.BillingState,
    billingCountry: acc.BillingCountry,
    createdDate: acc.CreatedDate,
    lastModifiedDate: acc.LastModifiedDate
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <!-- 4) GET /accounts/{externalId} -->
    <flow name="get:\accounts\(id):salesforce-system-api-config">
        <set-variable value="#[attributes.uriParams.Id]" doc:name="Set External Id" doc:id="787890ef-697a-4c0e-bf87-0b94cfb11170" variableName="externalId" />
        <logger level="INFO" doc:name="Logger" doc:id="e5b5d835-cbc6-4347-abb2-234cc52b1cbe" message="#[attributes]" />
        <set-variable variableName="query" value="#['SELECT Id, Name, External_Id__c, Phone, BillingCity, BillingState, BillingCountry, CreatedDate, LastModifiedDate FROM Account WHERE External_Id__c = \'' ++ (vars.externalId default '') ++ '\'']" doc:name="Build SOQL Query" />
        <salesforce:query config-ref="Salesforce_Config" doc:name="Query by id or external id">
            <salesforce:salesforce-query><![CDATA[#[vars.query]]]></salesforce:salesforce-query>
        </salesforce:query>
        <choice doc:name="Check if Found">
            <when expression="#[isEmpty(payload)]">
                <set-payload value="{&quot;message&quot;: &quot;Account not found&quot;}" mimeType="application/json" />
                <set-variable variableName="httpStatus" value="404" />
            </when>
            <otherwise>
                <set-variable variableName="httpStatus" value="200" />
            </otherwise>
        </choice>
        <ee:transform doc:name="Transform to JSON" doc:id="dab9eaa2-02b0-4af7-9ce7-e2087e4a73de">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (acc) -> {
    id: acc.Id,
    name: acc.Name,
    externalId: acc.external_id__c,
    phone: acc.Phone,
    billingCity: acc.BillingCity,
    billingState: acc.BillingState,
    billingCountry: acc.BillingCountry,
    createdDate: acc.CreatedDate,
    lastModifiedDate: acc.LastModifiedDate
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <set-variable value="#[vars.httpStatus default 200]" doc:name="Set Variable" doc:id="b46e5cb6-e2de-4abc-a3f3-80762c3c38dc" variableName="httpStatus" />
    </flow>
</mule>
